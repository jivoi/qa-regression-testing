[ glibc testing notes ]
=======================

It's *really* bad to introduce dependencies on newly added symbols
in libc's libraries, e.g. adding references in libm to symbols being
added at the same time in libc. See https://launchpad.net/bugs/1585614
for an example where this occurred, and the fallout thereof.

The reports generated by umt compare-bin will show these (see example
below; do NOT ignore them, even if both libraries are included in
the same binary package.

Unfortunately, add a test case for this in QRT is difficult; here's a
manual set of operations that can reproduce the issue in 12.04 and
14.04:

  1) install apache2, libapache2-mod-php5
  2) install the current version of libc6 (and related dependent
     packages: libc6-dev, etc.)
  3) cleanly restart apache to ensure it's using the pre-update versions
     of libc:
     # service apache2 restart
  4) check that apache started cleanly (w3m http://localhost, check
     /var/log/apache2/error.log for errors)
  5) install the version of libc being tested
  6) soft reload apache:
     # service apache2 reload
  7) recheck that apache is still running (w3m http://localhost,
     check /var/log/apache2/error.log for errors)

If apache is still running, then things are good. Note that in
https://launchpad.net/bugs/1585614, on wily (15.10) we were unable
to reproduce the symbol problem with apache and its modules, so a
different test may need to be devised.

[ example compare-bin output with added symbol dependencies ]

  Symbols have changed in the following files:

  ./lib/x86_64-linux-gnu/libc-2.19.so:
  +__strtod_nan T
  +__strtof_nan T
  +__strtold_nan T

  ./lib/x86_64-linux-gnu/libm-2.19.so:
  +__strtod_nan U
  +__strtof_nan U
  +__strtold_nan U
  -sprintf U
  -strlen U
  -strtod U
  -strtof U
  -strtold U

It's the __strto*_nan symbols above that cause problems; adding or
subtracting references to already existing symbols is not usually a
problem. (i.e. adding or removing references to the sprinf and str*
functions above). The problem arises when something runtime loads the
new libm with the new __strto*_nan dependencies, but the old libc is
the one being used by the currently running process, and so does not
provide the needed symbols.
